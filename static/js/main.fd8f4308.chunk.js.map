{"version":3,"sources":["App.js","index.js","../../src/mappers.mjs","../../src/useId.mjs","../../src/Address.jsx","../../src/country.mjs"],"names":["App","className","href","xmlns","viewBox","d","classNames","select","grid","gridRow","gridColumn","label","input","ReactDOM","render","StrictMode","document","getElementById","definitions","defaults","country","address1","address2","administrative_area","locality","sublocality","postal_code","sorting_code","expand","data","kind","reduce","expanded","key","index","value","expandFlags","flags","flag","Math","pow","serverHandoffComplete","id","genId","useId","idFromProps","initialId","React","useState","setId","window","createElement","useLayoutEffect","useEffect","defaultClassNames","container","option","countries","compressed","map","row","subdivisions","code","name","labels","required","AddressContext","createContext","Grid","Fragment","GridRow","useContext","columns","Object","entries","filter","Input","length","Subdivisions","htmlFor","autoCorrect","autoComplete","spellCheck","aria-required","type","style","color","subdivision","props","defaultCountry","countryCode","setCountryCode","replace","letter","toUpperCase","Provider","boxSizing","onChange","e","target","values"],"mappings":"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","file":"static/js/main.fd8f4308.chunk.js","sourcesContent":["import { Address } from '@internachi/franklin/dist/franklin.js';\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"container mx-auto my-12 md:flex\">\n\t\t\t<div className=\"md:w-1/2 p-8 md:text-right text-white\">\n\t\t\t\t<h1 className=\"tracking-tight font-extrabold sm:leading-none text-5xl lg:text-7xl xl:text-8xl\">\n\t\t\t\t\tFranklin.\n\t\t\t\t</h1>\n\t\t\t\t\n\t\t\t\t<p className=\"text-2xl my-8 text-indigo-100 opacity-90\">\n\t\t\t\t\tAn open source international address input made for the modern web.\n\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t<a href=\"https://github.com/internachi/franklin\" \n\t\t\t\t   className=\"bg-black rounded-xl p-4 text-white inline-flex items-center text-xl lg:text-3xl\">\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\" className=\"h-8 md:h-12 fill-current mr-4\">\n\t\t\t\t\t\t<path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\tCheck it out on Github\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div className=\"md:w-1/2 mx-4 md:mx-0\">\n\t\t\t\t<div className=\"bg-white rounded p-8\">\n\t\t\t\t\t<Address\n\t\t\t\t\t\tclassNames={ {\n\t\t\t\t\t\t\tselect: \"block w-full mt-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\",\n\t\t\t\t\t\t\tgrid: \"space-y-2\",\n\t\t\t\t\t\t\tgridRow: \"flex space-x-2\",\n\t\t\t\t\t\t\tgridColumn: \"flex-1\",\n\t\t\t\t\t\t\tlabel: \"block\",\n\t\t\t\t\t\t\tinput: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/tailwind.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","export const LABELS = 1;\nexport const FIELDS = 2;\nexport const COUNTRY = 3;\nexport const SUBDIVISION = 4;\n\nconst definitions = {\n\t[FIELDS]: [\n\t\t'country',\n\t\t'address1',\n\t\t'address2',\n\t\t'administrative_area',\n\t\t'locality',\n\t\t'sublocality',\n\t\t'postal_code',\n\t\t'sorting_code',\n\t],\n\t[COUNTRY]: [\n\t\t'code',\n\t\t'name',\n\t\t'grid',\n\t\t'labels',\n\t\t'required',\n\t\t'subdivisions',\n\t],\n\t[SUBDIVISION]: [\n\t\t'code',\n\t\t'name',\n\t],\n};\n\nconst defaults = {\n\t[FIELDS]: {\n\t\tcountry: 'Country',\n\t\taddress1: 'Address',\n\t\taddress2: 'Address Line 2',\n\t\tadministrative_area: 'Province',\n\t\tlocality: 'City',\n\t\tsublocality: 'Suburb',\n\t\tpostal_code: 'Postal',\n\t\tsorting_code: 'Sorting Code',\n\t},\n};\n\nexport function compress(data, kind) {\n\tconst compressed = [...definitions[kind]]\n\t\t.map((key, index) => {\n\t\t\tconst value = 'undefined' === typeof data[key] || null === data[key]\n\t\t\t\t? 0\n\t\t\t\t: data[key];\n\t\t\t\n\t\t\treturn kind in defaults && key in defaults[kind] && value === defaults[kind][key]\n\t\t\t\t? 0\n\t\t\t\t: value;\n\t\t});\n\t\n\t// Remove empty values from the end of the array\n\twhile (0 === compressed[compressed.length - 1]) {\n\t\tcompressed.pop();\n\t}\n\t\n\treturn compressed;\n}\n\nexport function compressFlags(flags, kind) {\n\treturn [...definitions[kind]]\n\t\t.reduce((compressed, key, index) => {\n\t\t\tconst flag = Math.pow(2, index);\n\t\t\treturn true === flags[key]\n\t\t\t\t? compressed | flag\n\t\t\t\t: compressed;\n\t\t}, 0);\n}\n\nexport function expand(data, kind) {\n\treturn [...definitions[kind]]\n\t\t.reduce((expanded, key, index) => {\n\t\t\tconst value = 'undefined' === typeof data[index]\n\t\t\t\t? 0\n\t\t\t\t: data[index];\n\t\t\t\n\t\t\texpanded[key] = 0 === value && kind in defaults && key in defaults[kind]\n\t\t\t\t? defaults[kind][key]\n\t\t\t\t: value;\n\t\t\t\n\t\t\treturn expanded;\n\t\t}, {});\n}\n\nexport function expandFlags(flags, kind) {\n\treturn [...definitions[kind]]\n\t\t.reduce((expanded, key, index) => {\n\t\t\tconst flag = Math.pow(2, index);\n\t\t\texpanded[key] = (flags & flag) > 0;\n\t\t\treturn expanded;\n\t\t}, {});\n}\n","import React from 'react';\n\n// Adapted from https://github.com/reach/reach-ui\n\nlet serverHandoffComplete = false;\nlet id = 0;\n\nconst genId = () => ++id;\n\nexport function useId(idFromProps) {\n\tconst initialId = idFromProps || (serverHandoffComplete ? genId() : null);\n\t\n\tconst [id, setId] = React.useState(initialId);\n\t\n\tconst useIsomorphicLayoutEffect = canUseDOM()\n\t\t? React.useLayoutEffect\n\t\t: React.useEffect;\n\t\n\tuseIsomorphicLayoutEffect(() => {\n\t\tif (null === id) {\n\t\t\tsetId(genId());\n\t\t}\n\t}, []);\n\t\n\tReact.useEffect(() => {\n\t\tserverHandoffComplete = true;\n\t}, []);\n\t\n\treturn id != null \n\t\t? `frnkln-${id}`\n\t\t: undefined;\n}\n\nfunction canUseDOM() {\n\treturn !!(\n\t\ttypeof window !== \"undefined\" &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n}\n","import React, { Fragment, useContext, useState } from 'react';\nimport data from '../data.json';\nimport expandCountry from './country.mjs';\nimport { useId } from './useId.mjs';\n\n// TODO:\n//  - Allow for \"common countries\" so you can put your most common countries at top of list\n//  - Controlled / uncontrolled inputs\n//  - More styling control at an input-by-input level\n//  - Explore wrapping in web component / jQuery plugin\n//  - Allow passing IDs\n//  - Validation\n\nconst defaultClassNames = {\n\tcontainer: '',\n\tselect: '',\n\toption: '',\n\tgrid: '',\n\tgridRow: '',\n\tgridColumn: '',\n\tlabel: '',\n\tinput: '',\n};\n\nconst countries = data.reduce((data, compressed) => {\n\tconst country = expandCountry(compressed);\n\tdata[country.code] = country;\n\treturn data;\n}, {});\n\nconst AddressContext = React.createContext({});\n\nexport function Address(props) {\n\tlet {\n\t\tdefaultCountry = 'US',\n\t\tclassNames = {},\n\t} = props;\n\t\n\tclassNames = { ...defaultClassNames, ...classNames };\n\t\n\tconst id = useId();\n\tconst [countryCode, setCountryCode] = useState(defaultCountry);\n\tconst country = countries[countryCode];\n\t\n\tconst label = country.labels.country.replace(/(?:^|\\s)(\\w{1})/g, letter => letter.toUpperCase());\n\t\n\treturn (\n\t\t<AddressContext.Provider value={ { country, classNames } }>\n\t\t\t<div className={ classNames.container } style={ { boxSizing: 'border-box' } }>\n\t\t\t\t<div className={ classNames.grid }>\n\t\t\t\t\t<div className={ classNames.gridRow }>\n\t\t\t\t\t\t<div className={ classNames.gridColumn }>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<label className={ classNames.label } htmlFor={ id }>\n\t\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<select id={ id } className={ classNames.select } value={ countryCode } onChange={ e => setCountryCode(e.target.value) }>\n\t\t\t\t\t\t\t\t{ Object.values(countries).map(country => (\n\t\t\t\t\t\t\t\t\t<option className={ classNames.option } key={ country.code } value={ country.code }>\n\t\t\t\t\t\t\t\t\t\t{ country.name }\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<Grid grid={ country.grid } />\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{/*<pre>{ JSON.stringify(country, null, 2) }</pre>*/ }\n\t\t\t</div>\n\t\t</AddressContext.Provider>\n\t);\n}\n\nfunction Grid({ grid }) {\n\treturn (\n\t\t<Fragment>\n\t\t\t{ grid.map(row => <GridRow row={ row } />) }\n\t\t</Fragment>\n\t);\n}\n\nfunction GridRow({ row }) {\n\tconst { classNames } = useContext(AddressContext);\n\t\n\tconst columns = Object.entries(row)\n\t\t.filter(([_, enabled]) => enabled)\n\t\t.map(([key]) => key);\n\t\n\treturn (\n\t\t<div className={ classNames.gridRow }>\n\t\t\t{ columns.map(name => <Input name={ name } />) }\n\t\t</div>\n\t);\n}\n\nfunction Input({ name }) {\n\tconst { country, classNames } = useContext(AddressContext);\n\tconst { labels, required, subdivisions } = country;\n\tconst id = useId();\n\t\n\tconst label = labels[name];\n\t\n\tif ('administrative_area' === name && subdivisions.length) {\n\t\treturn <Subdivisions\n\t\t\tid={ id }\n\t\t\tlabel={ label }\n\t\t\tname={ name }\n\t\t\trequired={ required[name] }\n\t\t\tsubdivisions={ subdivisions }\n\t\t/>;\n\t}\n\t\n\treturn (\n\t\t<div className={ classNames.gridColumn }>\n\t\t\t<label className={ classNames.label } htmlFor={ id }>\n\t\t\t\t{ label }\n\t\t\t\t{ required[name] ? '*' : '' }\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName={ classNames.input }\n\t\t\t\tid={ id }\n\t\t\t\tautoCorrect=\"off\"\n\t\t\t\tautoComplete={ autoComplete(name) }\n\t\t\t\tspellCheck=\"false\"\n\t\t\t\trequired={ required[name] }\n\t\t\t\taria-required={ required[name] }\n\t\t\t\tkey={ name }\n\t\t\t\tname={ name }\n\t\t\t\ttype=\"text\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction Subdivisions({ id, name, label, required, subdivisions }) {\n\tconst { classNames } = useContext(AddressContext);\n\t// const [value, setValue] = useState(required ? Object.keys(subdivisions)[0] : '');\n\t\n\treturn (\n\t\t<div className={ classNames.gridColumn }>\n\t\t\t<label className={ classNames.label } htmlFor={ id }>\n\t\t\t\t{ label }\n\t\t\t\t{ required ? '*' : '' }\n\t\t\t</label>\n\t\t\t<select\n\t\t\t\t// value={ value }\n\t\t\t\t// onChange={ e => setValue(e.target.value) }\n\t\t\t\tclassName={ classNames.select }\n\t\t\t\tid={ id }\n\t\t\t\tautoCorrect=\"off\"\n\t\t\t\tautoComplete={ autoComplete(name) }\n\t\t\t\trequired={ required }\n\t\t\t\taria-required={ required }\n\t\t\t\tkey={ name }\n\t\t\t\tname={ name }\n\t\t\t>\n\t\t\t\t{ false === required && (\n\t\t\t\t\t<option style={ { color: 'rgba(0, 0, 0, 0.3)' } } className={ classNames.option } value=\"\">\n\t\t\t\t\t\t\n\t\t\t\t\t</option>\n\t\t\t\t) }\n\t\t\t\t{ subdivisions.map(subdivision => (\n\t\t\t\t\t<option className={ classNames.option } value={ subdivision.code } key={ subdivision.code }>\n\t\t\t\t\t\t{ subdivision.name }\n\t\t\t\t\t</option>\n\t\t\t\t)) }\n\t\t\t</select>\n\t\t</div>\n\t);\n}\n\nfunction autoComplete(name) {\n\tconst defaults = {\n\t\tcountry: 'country',\n\t\taddress1: 'address-line1',\n\t\taddress2: 'address-line2',\n\t\tadministrative_area: 'address-level1',\n\t\tlocality: 'address-level2',\n\t\tsublocality: 'address-level3',\n\t\tpostal_code: 'postal-code',\n\t\tsorting_code: 'address-level4', // FIXME\n\t};\n\t\n\tif (name in defaults) {\n\t\treturn defaults[name];\n\t}\n\t\n\treturn '';\n}\n","import { expand, expandFlags, COUNTRY, FIELDS, SUBDIVISION } from './mappers.mjs';\n\nexport default function expandCountry(compressed) {\n\t\tconst expanded = expand(compressed, COUNTRY);\n\t\t\n\t\texpanded.grid = expanded.grid.map(row => expandFlags(row, FIELDS));\n\t\texpanded.subdivisions = expanded.subdivisions.map(([code, name]) => {\n\t\t\tname = name || code;\n\t\t\treturn { code, name };\n\t\t});\n\t\texpanded.labels = expand(expanded.labels, FIELDS);\n\t\texpanded.required = expandFlags(expanded.required, FIELDS);\n\t\t\n\t\treturn expanded;\n}\n"],"sourceRoot":""}