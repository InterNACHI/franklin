{"version":3,"sources":["../../src/helpers/mappers.mjs","../../src/core/defaults/createId.mjs","../../src/helpers/getClassNames.mjs","../../src/components/Wrapper.jsx","../../src/components/DefaultLabel.jsx","../../src/components/DefaultSelect.jsx","../../src/components/DefaultOption.jsx","../../src/components/DefaultInput.jsx","../../src/helpers/getAutoComplete.mjs","../../src/components/Address.jsx","../../src/helpers/expandCountry.mjs","../../src/helpers/getConfigurableComponents.mjs","../../src/helpers/useValues.mjs","App.js","index.js"],"names":["definitions","defaults","country","address1","address2","administrative_area","locality","sublocality","postal_code","sorting_code","expand","data","kind","reduce","expanded","key","index","value","expandFlags","flags","flag","Math","pow","createId","name","field","element","filter","segment","join","getClassName","props","classNames","Wrapper","React","className","children","DefaultLabel","label","required","labelProps","DefaultSelect","selectProps","DefaultOption","optionProps","DefaultInput","type","inputProps","getAutoComplete","countries","compressed","grid","map","row","subdivisions","code","latinName","sort","subdivision1","subdivision2","a","toUpperCase","b","labels","Address","defaultCountry","components","componentsFromProps","Grid","GridRow","GridColumn","Label","Select","Option","Input","gridRow","gridColumn","select","option","input","originalValues","useState","allValues","setAllValues","values","setValue","countryId","SelectColumn","options","Object","id","onChange","Row","columns","entries","columnName","Column","inputName","length","subdivision","unshift","InputColumn","htmlFor","e","target","autoCorrect","autoComplete","spellCheck","aria-required","App","href","xmlns","viewBox","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5f43f4d.chunk.js","sourcesContent":["export const LABELS = 1;\nexport const FIELDS = 2;\nexport const COUNTRY = 3;\nexport const SUBDIVISION = 4;\n\nconst definitions = {\n\t[FIELDS]: [\n\t\t'country',\n\t\t'address1',\n\t\t'address2',\n\t\t'administrative_area',\n\t\t'locality',\n\t\t'sublocality',\n\t\t'postal_code',\n\t\t'sorting_code',\n\t],\n\t[COUNTRY]: [\n\t\t'code',\n\t\t'name',\n\t\t'grid',\n\t\t'labels',\n\t\t'required',\n\t\t'subdivisions',\n\t],\n\t[SUBDIVISION]: [\n\t\t'code',\n\t\t'name',\n\t\t'latinName',\n\t],\n};\n\nconst defaults = {\n\t[FIELDS]: {\n\t\tcountry: 'Country',\n\t\taddress1: 'Address',\n\t\taddress2: 'Address Line 2',\n\t\tadministrative_area: 'Province',\n\t\tlocality: 'City',\n\t\tsublocality: 'Suburb',\n\t\tpostal_code: 'Postal',\n\t\tsorting_code: 'Sorting Code',\n\t},\n};\n\nexport function compress(data, kind) {\n\tconst compressed = [...definitions[kind]]\n\t\t.map((key, index) => {\n\t\t\tconst value = 'undefined' === typeof data[key] || null === data[key]\n\t\t\t\t? 0\n\t\t\t\t: data[key];\n\t\t\t\n\t\t\treturn kind in defaults && key in defaults[kind] && value === defaults[kind][key]\n\t\t\t\t? 0\n\t\t\t\t: value;\n\t\t});\n\t\n\t// Remove empty values from the end of the array\n\twhile (0 === compressed[compressed.length - 1]) {\n\t\tcompressed.pop();\n\t}\n\t\n\treturn compressed;\n}\n\nexport function compressFlags(flags, kind) {\n\treturn [...definitions[kind]]\n\t\t.reduce((compressed, key, index) => {\n\t\t\tconst flag = Math.pow(2, index);\n\t\t\treturn true === flags[key]\n\t\t\t\t? compressed | flag\n\t\t\t\t: compressed;\n\t\t}, 0);\n}\n\nexport function expand(data, kind) {\n\treturn [...definitions[kind]]\n\t\t.reduce((expanded, key, index) => {\n\t\t\tconst value = 'undefined' === typeof data[index]\n\t\t\t\t? 0\n\t\t\t\t: data[index];\n\t\t\t\n\t\t\texpanded[key] = 0 === value && kind in defaults && key in defaults[kind]\n\t\t\t\t? defaults[kind][key]\n\t\t\t\t: value;\n\t\t\t\n\t\t\treturn expanded;\n\t\t}, {});\n}\n\nexport function expandFlags(flags, kind) {\n\treturn [...definitions[kind]]\n\t\t.reduce((expanded, key, index) => {\n\t\t\tconst flag = Math.pow(2, index);\n\t\t\texpanded[key] = (flags & flag) > 0;\n\t\t\treturn expanded;\n\t\t}, {});\n}\n","'use strict';\n\nexport default function createId(name, field = '', element = '') {\n\treturn ['franklin', name, field, element]\n\t\t.filter(segment => '' !== segment)\n\t\t.join('-');\n}\n","\n// If `classNames.x` is passed into the props, we'll use that. Otherwise,\n// we default to something like `franklin__x`\nexport function getClassNames(props)\n{\n\treturn {\n\t\tgrid: getClassName('grid', props),\n\t\tgridRow: getClassName('gridRow', props),\n\t\tgridColumn: getClassName('gridColumn', props),\n\t\tlabel: getClassName('label', props),\n\t\tselect: getClassName('select', props),\n\t\toption: getClassName('option', props),\n\t\tinput: getClassName('input', props),\n\t};\n}\n\nexport function getClassName(name, props) {\n\tif ('classNames' in props && name in props.classNames) {\n\t\treturn props.classNames[name];\n\t}\n\t\n\treturn `franklin__${ name }`;\n}\n\nexport default getClassNames;\n","import React from 'react';\n\nexport function Wrapper({ children, className }) {\n\treturn (\n\t\t<div className={ className }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nexport default Wrapper;\n","import React from 'react';\n\nexport function DefaultLabel({ className, labelProps, label, required }) {\n\treturn (\n\t\t<label className={ className } { ...labelProps }>\n\t\t\t{ label }\n\t\t\t{ required ? '*' : '' }\n\t\t</label>\n\t);\n}\n\nexport default DefaultLabel;\n","import React from 'react';\n\nexport function DefaultSelect({ children, className, selectProps }) {\n\treturn (\n\t\t<select className={ className } { ...selectProps }>\n\t\t\t{ children }\n\t\t</select>\n\t);\n}\n\nexport default DefaultSelect;\n","import React from 'react';\n\nexport function DefaultOption({ label, optionProps, className }) {\n\treturn (\n\t\t<option className={ className } { ...optionProps }>\n\t\t\t{ label }\n\t\t</option>\n\t);\n}\n\nexport default DefaultOption;\n","import React from 'react';\n\nexport function DefaultInput({ className, inputProps }) {\n\treturn (\n\t\t<input \n\t\t\tclassName={ className } \n\t\t\ttype=\"text\" \n\t\t\t{ ...inputProps } \n\t\t/>\n\t);\n}\n\nexport default DefaultInput;\n","\nexport function getAutoComplete(name)\n{\n\tconst defaults = {\n\t\tcountry: 'country',\n\t\taddress1: 'address-line1',\n\t\taddress2: 'address-line2',\n\t\tadministrative_area: 'address-level1',\n\t\tlocality: 'address-level2',\n\t\tsublocality: 'address-level3',\n\t\tpostal_code: 'postal-code',\n\t\tsorting_code: 'address-level4', // TODO: Verify that sorting code maps to level 4\n\t};\n\t\n\treturn (name in defaults)\n\t\t? defaults[name]\n\t\t: '';\n}\n\nexport default getAutoComplete;\n","import React from 'react';\nimport data from '../../data.json';\nimport expandCountry from '../helpers/expandCountry.mjs';\nimport createId from '../core/defaults/createId.mjs';\nimport getClassNames from '../helpers/getClassNames.mjs';\nimport getConfigurableComponents from '../helpers/getConfigurableComponents.mjs';\nimport useValues from '../helpers/useValues.mjs';\nimport getAutoComplete from '../helpers/getAutoComplete.mjs';\n\n// This takes our compressed country data and converts it to a typical\n// JSON structure that's easy to work with.\nconst countries = [...data].reduce((data, compressed) => {\n\tconst country = expandCountry(compressed);\n\tdata[country.code] = country;\n\treturn data;\n}, {});\n\nexport function Address(props) {\n\tconst {\n\t\tname = 'address',\n\t\tdefaultCountry = 'US',\n\t} = props;\n\t\n\tconst components = getConfigurableComponents(props.components);\n\tconst classNames = getClassNames(props);\n\tconst [values, setValue] = useValues(defaultCountry, props.value);\n\tconst country = countries[values.country];\n\tconst countryId = createId(name, 'country', 'select');\n\t\n\tconst { Grid, GridRow } = components;\n\t\n\t// Eventually I'd like to offer a JSON prop that causes JSON to be used instead:\n\t// <input\n\t// \ttype=\"hidden\"\n\t// \tname={ name }\n\t// \tvalue={ JSON.stringify(values) }\n\t// />\n\t\n\treturn (\n\t\t<Grid className={ classNames.grid }>\n\t\t\t\n\t\t\t{/* Country Select Box */ }\n\t\t\t<GridRow className={ classNames.gridRow }>\n\t\t\t\t<SelectColumn\n\t\t\t\t\tcomponents={ components }\n\t\t\t\t\tclassNames={ classNames }\n\t\t\t\t\tname={ `${ name }[country]` }\n\t\t\t\t\tvalue={ values.country }\n\t\t\t\t\toptions={ Object.values(countries).map(country => ({ label: country.name, value: country.code })) }\n\t\t\t\t\tlabel={ country.labels.country }\n\t\t\t\t\trequired={ true }\n\t\t\t\t\tid={ countryId }\n\t\t\t\t\tonChange={ value => setValue('country', value) }\n\t\t\t\t/>\n\t\t\t</GridRow>\n\t\t\t\n\t\t\t{/* Dynamic Grid */ }\n\t\t\t{ country.grid.map((row, index) => <Row\n\t\t\t\tkey={ `row-${ index }` }\n\t\t\t\tname={ name }\n\t\t\t\trow={ row }\n\t\t\t\tclassNames={ classNames }\n\t\t\t\tcomponents={ components }\n\t\t\t\tcountry={ country }\n\t\t\t\tvalues={ values }\n\t\t\t\tsetValue={ setValue }\n\t\t\t/>) }\n\t\t</Grid>\n\t);\n}\n\nfunction Row(props) {\n\tconst { name, row, components, classNames, country, values, setValue } = props;\n\tconst { GridColumn } = components;\n\t\n\tconst columns = Object.entries(row)\n\t\t.filter(([_, enabled]) => enabled)\n\t\t.map(([key]) => key);\n\t\n\treturn (\n\t\t<div className={ classNames.gridRow }>\n\t\t\t{ columns.map(columnName => (\n\t\t\t\t<GridColumn key={columnName} className={ classNames.gridColumn }>\n\t\t\t\t\t<Column\n\t\t\t\t\t\tcomponents={ components }\n\t\t\t\t\t\tclassNames={ classNames }\n\t\t\t\t\t\tcountry={ country }\n\t\t\t\t\t\tinputName={ name }\n\t\t\t\t\t\tname={ columnName }\n\t\t\t\t\t\tvalue={ values[columnName] }\n\t\t\t\t\t\tonChange={ value => setValue(columnName, value) }\n\t\t\t\t\t/>\n\t\t\t\t</GridColumn>\n\t\t\t)) }\n\t\t</div>\n\t);\n}\n\nfunction Column(props) {\n\tconst { inputName, name, value, components, classNames, country, onChange } = props;\n\tconst { labels, required, subdivisions } = country;\n\tconst label = labels[name];\n\t\n\tif ('administrative_area' === name && subdivisions.length) {\n\t\tconst options = subdivisions.map(subdivision => {\n\t\t\tconst option = { label: subdivision.name, value: subdivision.code };\n\t\t\tif (subdivision.latinName !== null && subdivision.latinName !== subdivision.name) {\n\t\t\t\toption.label += ` – ${subdivision.latinName}`;\n\t\t\t}\n\t\t\treturn option;\n\t\t});\n\t\t\n\t\toptions.unshift({ label: '--', value: '' });\n\t\t\n\t\treturn <SelectColumn\n\t\t\tcomponents={ components }\n\t\t\tclassNames={ classNames }\n\t\t\tname={ `${ inputName }[${name}]` }\n\t\t\tvalue={ value }\n\t\t\tlabel={ label }\n\t\t\tid={ createId(name, name, 'select') }\n\t\t\trequired={ required[name] }\n\t\t\tonChange={ value => onChange(value) }\n\t\t\toptions={ options }\n\t\t/>;\n\t}\n\t\n\treturn <InputColumn\n\t\tcomponents={ components }\n\t\tclassNames={ classNames }\n\t\tname={ `${ inputName }[${ name }]` }\n\t\tvalue={ value }\n\t\tlabel={ label }\n\t\tid={ createId(name, name, 'select') }\n\t\trequired={ required[name] }\n\t\tonChange={ value => onChange(value) }\n\t/>;\n}\n\nfunction SelectColumn(props) {\n\tconst {\n\t\tcomponents,\n\t\tclassNames,\n\t\tname,\n\t\tvalue,\n\t\tlabel,\n\t\tid,\n\t\trequired,\n\t\tonChange,\n\t\toptions,\n\t} = props;\n\t\n\tconst {\n\t\tGridColumn,\n\t\tLabel,\n\t\tSelect,\n\t\tOption,\n\t} = components;\n\t\n\treturn (\n\t\t<GridColumn className={ classNames.gridColumn }>\n\t\t\t<Label\n\t\t\t\tlabel={ label }\n\t\t\t\trequired={ required }\n\t\t\t\tlabelProps={ { htmlFor: id } }\n\t\t\t\tclassName={ classNames.label }\n\t\t\t/>\n\t\t\t<Select\n\t\t\t\tselectProps={ {\n\t\t\t\t\tid: id,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tname: name,\n\t\t\t\t\tonChange: e => onChange(e.target.value),\n\t\t\t\t} }\n\t\t\t\tclassName={ classNames.select }\n\t\t\t>\n\t\t\t\t{ Object.values(options).map(option =>\n\t\t\t\t\t<Option\n\t\t\t\t\t\tkey={ option.value }\n\t\t\t\t\t\toptionProps={ { value: option.value } }\n\t\t\t\t\t\tclassName={ classNames.option }\n\t\t\t\t\t\tlabel={ option.label }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</Select>\n\t\t</GridColumn>\n\t);\n}\n\nfunction InputColumn(props) {\n\tconst {\n\t\tcomponents,\n\t\tclassNames,\n\t\tname,\n\t\tvalue,\n\t\tlabel,\n\t\tid,\n\t\trequired,\n\t\tonChange,\n\t} = props;\n\t\n\tconst {\n\t\tGridColumn,\n\t\tLabel,\n\t\tInput,\n\t} = components;\n\t\n\treturn (\n\t\t<GridColumn className={ classNames.gridColumn }>\n\t\t\t<Label\n\t\t\t\tlabel={ label }\n\t\t\t\trequired={ required }\n\t\t\t\tlabelProps={ { htmlFor: id } }\n\t\t\t\tclassName={ classNames.label }\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tkey={ name }\n\t\t\t\tclassName={ classNames.input }\n\t\t\t\tinputProps={ {\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tvalue,\n\t\t\t\t\tautoCorrect: \"off\",\n\t\t\t\t\tautoComplete: getAutoComplete(name),\n\t\t\t\t\tspellCheck: \"false\",\n\t\t\t\t\trequired: required[name],\n\t\t\t\t\t\"aria-required\": required[name],\n\t\t\t\t\tonChange: e => onChange(e.target.value),\n\t\t\t\t} }\n\t\t\t/>\n\t\t</GridColumn>\n\t);\n}\n","import { COUNTRY, expand, expandFlags, FIELDS } from './mappers.mjs';\n\nexport default function expandCountry(compressed) {\n\tconst expanded = expand(compressed, COUNTRY);\n\t\n\texpanded.grid = expanded.grid.map(row => expandFlags(row, FIELDS));\n\t\n\texpanded.subdivisions = expanded.subdivisions\n\t\t.map(([code, name, latinName = null]) => {\n\t\t\tname = name || code;\n\t\t\treturn { code, name, latinName };\n\t\t}).sort((subdivision1, subdivision2) => {\n\t\t\tlet a = (subdivision1.latinName || subdivision1.name).toUpperCase();\n\t\t\tlet b = (subdivision2.latinName || subdivision2.name).toUpperCase();\n\t\t\t\n\t\t\tif (a < b) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a > b) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\n\texpanded.labels = expand(expanded.labels, FIELDS);\n\t\n\texpanded.required = expandFlags(expanded.required, FIELDS);\n\texpanded.required.address1 = true;\n\t\n\treturn expanded;\n}\n","import Wrapper from '../components/Wrapper.jsx';\nimport DefaultLabel from '../components/DefaultLabel.jsx';\nimport DefaultSelect from '../components/DefaultSelect.jsx';\nimport DefaultOption from '../components/DefaultOption.jsx';\nimport DefaultInput from '../components/DefaultInput.jsx';\n\nexport function getConfigurableComponents(componentsFromProps = {})\n{\n\t// All components can be overwritten by passing a new React component\n\t// in through the `components` prop. By default, all components have\n\t// as little markup as necessary.\n\tconst {\n\t\tGrid = Wrapper,\n\t\tGridRow = Wrapper,\n\t\tGridColumn = Wrapper,\n\t\tLabel = DefaultLabel,\n\t\tSelect = DefaultSelect,\n\t\tOption = DefaultOption,\n\t\tInput = DefaultInput,\n\t} = componentsFromProps;\n\t\n\t// Once we've applied the default implementations, we'll push them back\n\t// into a `components` object so that we can easily pass them down into children.\n\treturn {\n\t\tGrid,\n\t\tGridRow,\n\t\tGridColumn,\n\t\tLabel,\n\t\tSelect,\n\t\tOption,\n\t\tInput,\n\t};\n}\n\nexport default getConfigurableComponents;\n","import { useState } from 'react';\n\nexport function useValues(defaultCountry = 'US', originalValues = {}) {\n\tconst [allValues, setAllValues] = useState(() => ({\n\t\tcountry: defaultCountry,\n\t\taddress1: '',\n\t\taddress2: '',\n\t\tadministrative_area: '',\n\t\tlocality: '',\n\t\tsublocality: '',\n\t\tpostal_code: '',\n\t\tsorting_code: '',\n\t\t...originalValues,\n\t}));\n\t\n\tconst setValue = (key, value) => setAllValues({ ...allValues, [key]: value });\n\t\n\treturn [allValues, setValue];\n}\n\nexport default useValues;\n","import React from 'react';\nimport { Address } from '@internachi/franklin';\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"container mx-auto my-12 md:flex\">\n\t\t\t<div className=\"md:w-1/2 p-8 md:text-right text-white\">\n\t\t\t\t<h1 className=\"tracking-tight font-extrabold sm:leading-none text-5xl lg:text-7xl xl:text-8xl\">\n\t\t\t\t\tFranklin.\n\t\t\t\t</h1>\n\t\t\t\t\n\t\t\t\t<p className=\"text-2xl my-8 text-indigo-100 opacity-90\">\n\t\t\t\t\tAn open source international address input made for the modern web.\n\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t<a href=\"https://github.com/internachi/franklin\" \n\t\t\t\t   className=\"bg-black rounded-xl p-4 text-white inline-flex items-center text-xl lg:text-3xl\">\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\" className=\"h-8 md:h-12 fill-current mr-4\">\n\t\t\t\t\t\t<path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\tCheck it out on Github\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div className=\"md:w-1/2 mx-4 md:mx-0\">\n\t\t\t\t<div className=\"bg-white rounded p-8\">\n\t\t\t\t\t<Address\n\t\t\t\t\t\tclassNames={ {\n\t\t\t\t\t\t\tselect: \"block w-full mt-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\",\n\t\t\t\t\t\t\tgrid: \"space-y-2\",\n\t\t\t\t\t\t\tgridRow: \"flex space-x-2\",\n\t\t\t\t\t\t\tgridColumn: \"flex-1\",\n\t\t\t\t\t\t\tlabel: \"block\",\n\t\t\t\t\t\t\tinput: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/tailwind.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}